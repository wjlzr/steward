<?php

namespace App\Http\Controllers\Api;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Redis as Redis;

use App\Models\User\StUser;
use App\Models\Mall\StMall;


class LoginController extends Controller
{


    /**
     * 用户登录接口
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function login(Request $request)
    {

        $app_client = $request->input('app_client');
        $mobile = $request->input('mobile');
        $password = $request->input('password');

        if ( empty($mobile) ) {
            return response()->json(['code'=>400, 'message'=>'手机号码不能为空']);
        } else if ( !isMobile($mobile) ) {
            return response()->json(['code'=>400, 'message'=>'手机号格式错误']);
        }

        $user = StUser::where('mobile', $mobile)->first();
        if (!$user) {
            return response()->json(['code'=>404, 'message'=>'用户信息没有找到']);
        } else if ($user->status == 0) {
            return response()->json(['code'=>404, 'message'=>'当前用户已禁用']);
        }

        $return_result = [];

        if ($user->type == 2) {
            $mall = StMall::find($user->mall_id);
            if (!$mall) {
                return response()->json(['code'=>404, 'message'=>'门店信息没有找到']);
            }
        }

        if ($app_client == 2) {

            $return_result = [
                'user_id' => app_to_int($user->id),
                'user_name' => app_to_string($user->user_name),
                'full_name' => app_to_string($user->full_name),
                'user_type' => app_to_int($user->type)
            ];

            $mall_array = StMall::get();
            if ($mall_array->count() > 0) {
                foreach($mall_array as $m) {
                    $return_result['mall'][] = [
                        'mall_id' => app_to_int($m->id),
                        'mall_name' => app_to_string($m->name),
                        'mall_code' => app_to_string($m->code)
                    ];
                }
            }

        } else {

            if ( empty($password)) {
                return response()->json(['code'=>400, 'message'=>'登录密码不能为空']);
            } else if (!isPwd($password)) {
                return response()->json(['code'=>400, 'message'=>'登录密码格式不正确']);
            } else if (md5($password) != $user->pwd) {
                return response()->json(['code'=>400, 'message'=>'用户密码不正确']);
            }

            Redis::setex('ST_MALL_ID_' . session()->getId(), 86400, $user->mall_id);
            Redis::setex('ST_USER_TYPE_' . session()->getId(), 86400, $user->type);
            Redis::setex('ST_USER_ID_' . session()->getId(), 86400, $user->id);

        }

        return response()->json(['code' => 200, 'message' => '登录成功', 'data' => $return_result]);

    }


    /**
     * 用户登出接口
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function logout(Request $request)
    {

        $app_client = $request->input('app_client');

        if ($app_client == 2) {

            return response()->json(['code'=>200, 'message'=>'ok', 'data'=>[]]);

        } else {

            Redis::del('ST_MALL_ID_' . session()->getId());
            Redis::del('ST_USER_TYPE_' . session()->getId());
            Redis::del('ST_USER_ID_' . session()->getId());

            return response()->json(['code'=>200, 'message'=>'ok']);

        }

    }


}
