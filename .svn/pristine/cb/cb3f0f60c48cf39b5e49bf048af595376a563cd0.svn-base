<?php

namespace App\Http\Controllers\Api;

use DB;
use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Models\Order\StOrder;
use App\Models\StApp;
use App\Models\Goods\StAppGoodsSale;
use App\Models\Order\StOrderGoods;
use App\Models\Mall\StAppMall;
use App\Http\Controllers\Controller;


class IndexController extends Controller
{


    /**
     * 销售概况接口
     * @param Request $request = [
     *      'mall_id' => int 门店ID，
     *      'date_type' => int 日期类型：1、今天 2、昨天 3、近7天 4、近30天
     * ]
     * @return \Illuminate\Http\JsonResponse
     */
    public function salesProfile(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        $data = DB::table('st_order')
                    ->where($where)
                    ->select(DB::raw('SUM(order_fee) as total_sales,SUM(package_fee) as package_sales,SUM(user_fee) as expect_sales,COUNT(*) as valid_orders,AVG(order_fee) as avg_price'))
                    ->whereNotIn('status',[5, 6])
                    ->first();

        $total_orders = StOrder::where($where)->count();

        $return_result = [
            'total_sales' => app_to_decimal($data->total_sales), //总营业额
            'package_sales' => app_to_decimal($data->package_sales), //包装收入
            'expect_sales' => app_to_decimal($data->expect_sales), //预计收入
            'valid_orders' => app_to_int($data->valid_orders), //有效订单数
            'total_orders' => app_to_int($total_orders), //总订单数
            'avg_price' => app_to_decimal($data->avg_price) //客单价
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 平台销售占比接口
     * @param Request $request = [
     *      'mall_id' => int 门店ID
     *      'date_type' => int 日期类型：1、今天 2、昨天 3、近7天 4、近30天
     * ]
     * @return \Illuminate\Http\JsonResponse
     */
    public function appOrdersSales(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        $return_result = [];

        //平台
        $stApp = StApp::all();

        foreach ($stApp as $app) {

            $sale_value = StOrder::where($where)
                                ->where('app_id',$app->id)
                                ->sum('order_fee');

            $bill_value = StOrder::where($where)
                                ->where('app_id',$app->id)
                                ->count();

            $return_result['sales'][] = [
                'value' => $sale_value,
                'name' => $app->name
            ];
            $return_result['orders'][] = [
                'value' => $bill_value,
                'name' => $app->name
            ];
        }

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 商品、门店动销接口
     * @param Request $request = [
     *      'mall_id' => int 门店ID
     *      'date_type' => int 日期类型：1、今天 2、昨天 3、近7天 4、近30天
     * ]
     * @return \Illuminate\Http\JsonResponse
     */
    public function goodsMallActSales(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        error_log('=====//啦啦啦啦啦');
        error_log(var_export($where,true));

        //总商品数
        $total_number = StAppGoodsSale::where($where)
                                    ->count();

        //上架商品数
        $shelf_number = StAppGoodsSale::where($where)
                                    ->where('status',1)
                                    ->count();

        //动销商品数
        $act_number = StOrderGoods::where($where)
                                  ->count();

        //总门店数
        $mall_total_number = StAppMall::where($where)
                                ->count();

        //上架门店数
        $mall_shelf_number = StAppMall::where($where)
                                ->where('status',1)
                                ->count();

        //动销门店数
        $mall_act_number = StOrder::where($where)
                                ->count();

        $return_result = [
                'total_number' => app_to_int($total_number),    //总商品数
                'shelf_number' => app_to_int($shelf_number),    //上架商品数
                'act_number' => app_to_int($act_number),   //动销商品数
                'mall_total_number' => app_to_int($mall_total_number),    //总门店数
                'mall_helf_number' => app_to_int($mall_shelf_number),    //上架门店数
                'mall_act_number' => app_to_int($mall_act_number)   //动销门店数
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 热销商品排行接口
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function hotSellGoodsRank(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        $request = [];
        $stOrdersGoods = DB::table('st_order_goods')
                            ->select('goods_name',DB::raw('SUM(goods_price) as total_money,SUM(goods_number) as total_number'))
                            ->where($where)
                            ->groupBy('goods_id')
                            ->orderBy('total_number','desc')
                            ->take(10)
                            ->get();

        foreach ($stOrdersGoods as $goods) {

            $avg_price = app_to_decimal($goods->total_money/$goods->total_number);

            $request[] = [
                'goods_name' => $goods->goods_name,
                'total_money' => $goods->total_money,
                'total_number' => $goods->total_number,
                'avg_price' => $avg_price
            ];
        }

        /*error_log('======//热销商品');
        error_log(var_export($request,true));*/

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$request]);

    }


    /**
     * 热销分类排行接口
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function hotSaleCategoryRank(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        $request = [];
        $stOrdersGoods = DB::table('st_order_goods')
            ->select('goods_name',DB::raw('SUM(goods_price) as total_money,SUM(goods_number) as total_number'))
            ->where($where)
            ->groupBy('spec_id')
            ->orderBy('total_number','desc')
            ->take(10)
            ->get();

        foreach ($stOrdersGoods as $goods) {

            $avg_price = app_to_decimal($goods->total_money/$goods->total_number);

            $request[] = [
                'goods_name' => $goods->goods_name,
                'total_money' => $goods->total_money,
                'total_number' => $goods->total_number,
                'avg_price' => $avg_price
            ];
        }

        error_log('======//热销商品');
        error_log(var_export($request,true));

        $return_result = [
            [
                'category_name' => '',
                'total_money' => 0,
                'total_number' => 0,
                'avg_price' => ''
            ]
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 所有门店营收入排行
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function mallRevenueRank(Request $request)
    {

        $where = $this->where($request->input('date_type', 1), $request->input('mall_id', 0));

        error_log('=====//查查查');
        DB::enableQueryLog();
        $stOrder = DB::table('st_order')
        ->select('mall_name',DB::raw('SUM(order_fee) as total_sales,SUM(package_fee) as package_sales,SUM(user_fee) as expect_sales,COUNT(*) as total_orders,AVG(order_fee) as avg_price'))
        ->where($where)
        ->groupBy('mall_id')
        ->orderBy('total_sales','desc')
        ->take(10)
        ->get();

        $sql = DB::getQueryLog();
        error_log(var_export($sql,true));
        error_log(var_export($stOrder,true));

        $return_result = [
            [
                'total_sales' => 0, //总营业额
                'package_sales' => 0, //包装收入
                'expect_sales' => 0, //预计收入
                'valid_orders' => 0, //有效订单数
                'total_orders' => 0, //总订单数
                'avg_price' => 0 //客单价
            ]
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 所有门店订单效率排行
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function mallOrderEfficiencyRank(Request $request)
    {

        $return_result = [
            [
                'mall_name' => 0, //门店名称
                'efficiency' => 0, //效率（秒计：s）
            ]
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 门店统计营收排名
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function salesRank(Request $request)
    {

        $mall_id = $request->input('mall_id', 0);

        $return_result = [
            'low' => 0,
            'avg' => 0,
            'this' => 0,
            'high' => 0
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 门店统计订单效率排名
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function orderEfficiencyRank(Request $request)
    {

        $mall_id = $request->input('mall_id', 0);

        $return_result = [
            'low' => 0,
            'avg' => 0,
            'this' => 0,
            'high' => 0
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 门店订单状态数量统计
     * @return \Illuminate\Http\JsonResponse
     */
    public function orderStatusCount()
    {

        $return_result = [
            'new_orders' => 0,
            'wait_send_orders' => 0,
            'abnormal_orders' => 0,
            'remind_orders' => 0,
            'refund_orders' => 0
        ];

        return response()->json(['code'=>200, 'message'=>'ok', 'data'=>$return_result]);

    }


    /**
     * 查询条件处理
     * @param int $date_type
     * @param int $mall_id
     * @param string $table
     * @return array
     */
    private function where($date_type = 1, $mall_id = 0, $table = '')
    {

        $table  = !empty($table)
            ? $table . '.'
            : '';

        $str_time = '';

        if ($date_type == 2) {
            $str_time = strtotime('-1 day');
        } else if ($date_type == 3) {
            $str_time = strtotime('-7 day');
        } else if ($date_type == 4) {
            $str_time = strtotime('-30 day');
        }

        $start = empty($str_time)
            ? date('Y-m-d 00:00:00')
            : date('Y-m-d 00:00:00', $str_time);

        $where = [
            [$table . 'created_at', '>=', $start],
            [$table . 'created_at', '<=', date('Y-m-d H:i:s')]
        ];

        if (!empty($mall_id)) {
            $where[] = [ $table . 'mall_id', $mall_id];
        }

        return $where;

    }


}
