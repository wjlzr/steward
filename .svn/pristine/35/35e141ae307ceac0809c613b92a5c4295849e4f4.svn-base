<?php
namespace App\Http\Controllers\Admin\Task;

use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Http\Controllers\Admin\Task\TaskManageController;
use DB;
use Illuminate\Support\Facades\Redis as Redis;

class StatSaleController extends Controller
{

    public function stat(Request $request) {

        if (empty($request->input('task_log_id'))) {
            die('参数错误');
        }

        $TaskManageController = new TaskManageController();

        $calDate = date('Y-m-d', strtotime('-1 day'));
        $s_time = $calDate . ' 00:00:00';
        $e_time = $calDate . ' 23:59:59';

        ini_set('memory_limit', '2048M');

        set_time_limit(0);

        $orders_data = DB::table('st_order_trace')
            ->select('order_id')
            ->where('order_status', 4)
            ->whereBetween('created_at', [$s_time, $e_time])
            ->get();

        if (empty($orders_data)) {
            $TaskManageController->updateTaskLog($request->input('task_log_id'), '没有找到数据'.$calDate);
            die('没有找到数据' . $calDate);
        }

        //商品分析数组
        $goods_analyse = array();
        //商品分类分析数组
        $goods_category = array();

        $orders_array = array_chunk($orders_data,5000);

        foreach ( $orders_array as $orders ) {
            foreach ($orders as $d) {

                $goods_data = DB::table('st_order as so')
                    ->join('st_order_goods as sg','sg.order_id','=','so.order_id')
                    ->select(DB::raw('DATE_FORMAT(so.created_at,\'%Y-%m-%d\') AS days, app_id, mall_id,  
                        goods_id, goods_name, sku, upc, goods_number, sale_price, goods_price'))
                    ->where('id', $d['order_id'])->get();

                if (empty($goods_data)) {
                    continue;
                }

                foreach ( $goods_data as $g ) {
                    //商品分析数组
                    $index = $g['days'] . '_' . $g['mall_id'] . '_' . $g['app_id'].'_'.$g['goods_id'];

                    if ( !isset($goods_analyse[$index]) ) {
                        $goods_analyse[$index] = array(
                            'cal_date' => $g['days'],
                            'mall_id' => $g['mall_id'],
                            'app_id' => $g['app_id'],
                            'goods_id' => $g['goods_id'],
                            'goods_name' => $g['goods_name'],
                            'sku' => $g['sku'],
                            'upc' => $g['upc'],
                            'total_num' => 0,
                            'total_bill_money' => 0
                        );
                    }

                    $goods_analyse[$index]['total_num'] += $g['goods_number'];
                    $goods_analyse[$index]['total_bill_money'] += $g['goods_number']*$g['sale_price'];

                    //商品分类分析数组
                    $category= DB::table('st_goods_sale')
                        ->select('big_category_id','big_category_name','mid_category_id','mid_category_name','small_category_id','small_category_name')
                        ->where('goods_id',$g['goods_id'])
                        ->get();

                    if ( empty($category) ){
                        continue;
                    }

                    $ca_index = $g['days'] . '_' . $g['mall_id'] . '_' . $g['app_id'].'_'.$category[0]['big_category_id'].'_'.$category[0]['mid_category_id'].'_'.$category[0]['small_category_id'];

                    if ( !isset($goods_category[$ca_index]) ) {
                        $goods_category[$ca_index] = array(
                            'cal_date' => $g['days'],
                            'mall_id' => $g['mall_id'],
                            'app_id' => $g['app_id'],
                            'first_level_id' => $category[0]['big_category_id'],
                            'first_level_name' => $category[0]['big_category_name'],
                            'second_level_id' => $category[0]['mid_category_id'],
                            'second_level_name' => $category[0]['mid_category_name'],
                            'third_level_id' => $category[0]['small_category_id'],
                            'third_level_name' => $category[0]['small_category_name'],
                            'total_bill_money' => 0
                        );
                    }

                    $goods_category[$ca_index]['total_bill_money'] += $g['goods_number']*$g['sale_price'];

                }

            }
        }

        //保存商品分析数据
        if ( $goods_analyse ) {
            st_stat_goods_analyse($goods_analyse);
        }

        //保存商品分类分析数据
        if ( $goods_category ) {
            st_stat_goods_category_analyse($goods_category);
        }

        ini_restore('memory_limit');

        $TaskManageController->updateTaskLog( $request->input('task_log_id'), 'SUCCESS' );

    }

}

function st_stat_goods_analyse( $goods_analyse ) {

    foreach ($goods_analyse as $g) {

        $check = DB::table('st_stat_goods_analyse')
            ->where([
                ['cal_date',$g['cal_date']],
                ['mall_id',$g['mall_id']],
                ['app_id',$g['app_id']],
                ['goods_id',$g['goods_id']]
            ])->get();

        if (empty($check)){

            $insert_sql[] = array(
                'updated_at' => Carbon::now(),
                'creator' => 'system',
                'created_at' => Carbon::now(),
                'cal_date' => $g['cal_date'],
                'mall_id' => $g['mall_id'],
                'app_id' => $g['app_id'],
                'goods_id' => $g['goods_id'],
                'goods_name' => $g['goods_name'],
                'sku' => $g['sku'],
                'upc' => $g['upc'],
                'total_num' => $g['total_num'],
                'total_bill_money' => $g['total_bill_money']
            );

            DB::table('st_stat_goods_analyse')->insert($insert_sql);

        } else {

            DB::table('st_stat_goods_analyse')
                ->where([
                    ['cal_date', $g['cal_date']],
                    ['mall_id', $g['mall_id']],
                    ['app_id', $g['app_id']],
                    ['goods_id',$g['goods_id']]
                ])->update([
                    'total_num' => $check[0]['total_num'] + $g['total_num'],
                    'total_bill_money' => $check[0]['total_bill_money'] + $g['total_bill_money']
                ]);

        }

    }

}


function st_stat_goods_category_analyse( $goods_category ) {

    foreach ( $goods_category as $c ) {

        $check = DB::table('st_stat_goods_analyse')
            ->where([
                ['cal_date',$c['cal_date']],
                ['mall_id',$c['mall_id']],
                ['app_id',$c['app_id']],
                ['first_level_id',$c['first_level_id']],
                ['second_level_id',$c['second_level_id']],
                ['third_level_id',$c['third_level_id']]
            ])->get();

        if ( empty($check) ) {

            $insert_sql[] = array(
                'updated_at' => Carbon::now(),
                'creator' => 'system',
                'created_at' => Carbon::now(),
                'cal_date' => $c['cal_date'],
                'mall_id' => $c['mall_id'],
                'app_id' => $c['app_id'],
                'first_level_id' => $c['first_level_id'],
                'first_level_name' => $c['first_level_name'],
                'second_level_id' => $c['second_level_id'],
                'second_level_name' => $c['second_level_name'],
                'third_level_id' => $c['third_level_id'],
                'third_level_name' => $c['third_level_name'],
                'total_bill_money' => $c['total_bill_money']
            );

            DB::table('st_stat_goods_analyse')->insert($insert_sql);

        } else {

            DB::table('st_stat_goods_analyse')
                ->where([
                    ['cal_date',$c['cal_date']],
                    ['mall_id',$c['mall_id']],
                    ['app_id',$c['app_id']],
                    ['first_level_id',$c['first_level_id']],
                    ['second_level_id',$c['second_level_id']],
                    ['third_level_id',$c['third_level_id']]
                ])->update([
                    'total_bill_money' => $check[0]['total_bill_money'] + $c['total_bill_money']
                ]);

        }

    }

}